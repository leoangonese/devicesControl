@model Item

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-primary text-white text-center">
                    <h2>Criar Novo Equipamento</h2>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Create", "Item", FormMethod.Post, new { @class = "needs-validation", novalidate = "true" }))
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.id, labelText: "Digite o Número de Série:")
                            @Html.TextBoxFor(model => model.id, new { @class = "form-control", required = "required", type = "number" })
                            <div class="invalid-feedback">Campo obrigatório.</div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.date, labelText: "Data de Aquisição:")
                            @Html.TextBoxFor(model => model.date, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                            <div class="invalid-feedback">Campo obrigatório.</div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.type, labelText: "Tipo:")
                            @Html.DropDownListFor(model => model.type, new SelectList(new[] { "Android", "iPhone", "Notebook", "Impressora" }), "Selecione um tipo", new { @class = "form-control", required = "required" })
                            <div class="invalid-feedback">Campo obrigatório.</div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.status, labelText: "Status:")
                            @Html.DropDownListFor(model => model.status, new SelectList(new[] { "Em Uso", "Sem Uso" }), "Selecione um status", new { @class = "form-control", required = "required" })
                            <div class="invalid-feedback">Campo obrigatório.</div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.hardware, labelText: "Endereço de Hardware:")
                            @Html.TextBoxFor(model => model.hardware, new { @class = "form-control", type = "number", required = "required" })
                            <div class="invalid-feedback">Campo obrigatório.</div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.card, labelText: "Cartão:")
                            @Html.DropDownListFor(model => model.card, new SelectList(new[] { "Sem Chip", "Vivo", "Claro", "Oi", "Tim", "Outra Operadora" }), "Selecione uma opção", new { @class = "form-control", required = "required" })
                            <div class="invalid-feedback">Campo obrigatório.</div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.online, labelText: "Online:")
                            @Html.DropDownListFor(model => model.online, new SelectList(new[] { "Online", "Offline" }), "Selecione o status", new { @class = "form-control", required = "required" })
                            <div class="invalid-feedback">Campo obrigatório.</div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.profile, labelText: "Perfil:")
                            @Html.TextBoxFor(model => model.profile, new { @class = "form-control", required = "required" })
                            <div class="invalid-feedback">Campo obrigatório.</div>
                        </div>

                        <button type="submit" class="btn btn-primary mt-4">Salvar</button>
                    }
                </div>
                <div class="card-footer text-center">
                    @Html.ActionLink("Voltar para Lista", "Index", null, new { @class = "btn btn-warning" })
                    <div class="invalid-feedback">Campo obrigatório.</div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var form = document.querySelector('.needs-validation');

        form.addEventListener('submit', function (event) {
            if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();

                form.classList.add('was-validated');
            }
        });
    });
</script>